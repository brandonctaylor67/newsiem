version: '3.3'
services:
  logstash:
    image: docker.elastic.co/logstash/logstash:6.8.0
    environment:
      LS_JAVA_OPTS: '-Xms512m -Xmx512m'
      CONFIG_RELOAD_AUTOMATIC: 'true'
      QUEUE_TYPE: persisted
      QUEUE_MAX_BYTES: 5g
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          memory: 1g
      restart_policy:
        condition: any
        delay: 10s
    volumes:
      - /home/docker/logstash/pipeline:/usr/share/logstash/pipeline/
      - /home/docker/logstash/dictionaries:/usr/share/logstash/dictionaries
      - /home/docker/logstash/templates:/usr/share/logstash/templates
      - /home/docker/logstash/geoipdbs:/usr/share/logstash/geoipdbs
    networks:
      - siem
    healthcheck:
      test: curl --fail -s http://localhost:9600/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
    depends_on:
      - elasticsearch
      - stunnel-redis
  redis:
    image: redis@sha256:e549a30b3c31e6305b973e0d9113a3d38d60566708137af9ed7cbdce5650c5cc
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
    volumes:
      - /home/docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - /home/docker/redis/data:/data
    networks:
      - siem
  stunnel-redis:
    image: docker.corp.atlantic.net/devops/docker-stunnel:1-0
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
    environment:
      STUNNEL_SERVICE: redis
      STUNNEL_ACCEPT: 6479
      STUNNEL_CONNECT: redis:6379
      STUNNEL_VERIFY_CA: 'yes'
    ports:
      - 6479:6479
    volumes:
      - /home/docker/ssl/ssl.key:/etc/stunnel/stunnel.key:ro
      - /home/docker/ssl/ssl.pem:/etc/stunnel/stunnel.pem:ro
    networks:
      - siem 
    healthcheck:
      test: curl -k --fail -s https://127.0.0.1:6479 || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
  grafana:
    image: docker.corp.atlantic.net/devops/grafana:anet
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
    ports:
      - 3000:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: 'eK3U%ivxZ#beEz1XhLIez9JF'
      GF_INSTALL_PLUGINS: 'grafana-piechart-panel,grafana-worldmap-panel'
      GF_SMTP_ENABLED: 'true'
      GF_SMTP_HOST: 'smtp.atlantic.net:25'
      GF_SMTP_USER: '55191-14396@atlantic.net'
      GF_SMTP_PASSWORD: 'oD1J58s@m^^@I0fhFE4AXNdD'
      GF_SMTP_FROM_ADDRESS: '55191-14396@atlantic.net'
      GF_SMTP_FROM_NAME: 'Atlantic.Net SIEM - Taylor, Brandon'
      GF_SERVER_DOMAIN: '55191-14396.anetmgmt.net'
      GF_SERVER_PROTOCOL: 'https'
      GF_SERVER_CERT_FILE: '/etc/ssl/ssl.pem'
      GF_SERVER_CERT_KEY: '/etc/ssl/ssl.key'
      TZ: 'America/New_York'
    volumes:
      - /home/docker/grafana:/var/lib/grafana
      - /home/docker/grafana/provisioning:/etc/grafana/provisioning
      - /home/docker/ssl/ssl.key:/etc/ssl/ssl.key:ro
      - /home/docker/ssl/ssl.pem:/etc/ssl/ssl.pem:ro
    networks:
      - siem
    healthcheck:
      test: curl --fail -s -k https://localhost:3000/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 10
    depends_on:
      - elasticsearch
  curator:
    image: anjia0532/docker-curator
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
        delay: 10s
    environment:
      UNIT_COUNT: 90
      UNIT: days
      ES_HOST: elasticsearch
      TZ: 'America/New_York'
    depends_on:
      - elasticsearch
    volumes:
      - /home/docker/curator:/config
    networks:
      - siem
  wazuh:
    image: wazuh/wazuh:3.13.1_7.8.0
    hostname: wazuh-manager
    restart: always
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"

  elasticsearch:
    image: wazuh/wazuh-elasticsearch:3.13.1_7.8.0
    hostname: elasticsearch
    restart: always
    ports:
      - "9200:9200"
    environment:
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - ELASTIC_CLUSTER=true
      - CLUSTER_NODE_MASTER=true
      - CLUSTER_MASTER_NODE_NAME=es01
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: wazuh/wazuh-kibana:3.13.1_7.8.0
    hostname: kibana
    restart: always
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - wazuh:wazuh

  nginx:
    image: wazuh/wazuh-nginx:3.13.1_7.8.0
    hostname: nginx
    restart: always
    environment:
      - NGINX_PORT=443
      - NGINX_CREDENTIALS
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - kibana
    links:
      - kibana:kibana
networks:
  siem:
    external: true
